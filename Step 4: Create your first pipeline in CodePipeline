Step 4: Create your first pipeline in CodePipeline
You will construct the pipeline in this lesson section. The pipeline automatically moves the sample through each step.
To create a CodePipeline automated release process
Sign in to the AWS Management Console and open the CodePipeline console at http://console.aws.amazon.com/codesuite/codepipeline/home.
On the Welcome page, Getting started page, or the Pipelines page, choose Create pipeline.
In Step 1: Choose pipeline settings, in Pipeline name, enter WindowsDeploy.
In Service role, do one of the following: 
- Choose New service role to allow CodePipeline to create a new service role in IAM.
- Choose Existing service role to use a service role already created in IAM. In Role name, choose your service role from the list.
Leave the settings under Advanced settings at their defaults, and then choose Next.
In Step 2: Add source stage, in Source provider, choose Amazon S3. In Bucket, enter the name of the S3 bucket you created in Step 1: Create an S3 bucket for your application. In S3 object key, enter the object key with or without a file path, and remember to include the file extension. For example, enter the object key file for AppSpec.yml as shown in this example: SampleApp_Windows.zip/appspec.yml
Choose Next step. Under Change detection options, leave the defaults. This allows CodePipeline to use Amazon CloudWatch Events to detect changes in your source bucket.Choose Next.
In Step 3: Add build stage, choose Skip build stage, and then accept the warning message by choosing Skip again. Choose Next.
In Step 4: Add deploy stage, in Deploy provider, choose CodeDeploy . The Region field defaults to the same AWS Region as your pipeline. In Application name, enter WindowsAppDeploy, or choose the Refresh button, and then choose the application name from the list. In Deployment group, enter WindowsDeployment, or choose it from the list, and then choose Next.
In Step 5: Review, review the information, and then choose Create pipeline.
The pipeline starts to run. You can view progress and success and failure messages as the CodePipeline sample deploys a webpage to each of the Amazon EC2 instances in the CodeDeploy deployment.



Congratulations! You just created a simple pipeline in CodePipeline. The pipeline has two stages:
A source stage named Source, which detects changes in the versioned sample application stored in the S3 bucket and pulls those changes into the pipeline.
A Deploy stage that deploys those changes to EC2 instances with CodeDeploy.
Now, verify the results.
To verify your pipeline ran successfully
View the initial progress of the pipeline. The status of each stage changes from No executions yet to In Progress, and then to either Succeeded or Failed. The pipeline should complete the first run within a few minutes.
After Succeeded is displayed for the action status, in the status area for the Deploy stage, choose Details. This opens the CodeDeploy console.
In the Deployment group tab, under Deployment lifecycle events, choose an instance ID. This opens the EC2 console.
On the Description tab, in Public DNS, copy the address, and then paste it into the address bar of your web browser. View the index page for the sample application you uploaded to your S3 bucket.
The web page displays for the sample application you uploaded to your S3 bucket.
